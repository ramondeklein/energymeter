########################################################################
# EnergyMeter uses a MySQL database to store all data. It can use a
# remote database, but most installation will use the MySQL installation
# that is installed locally.
########################################################################

[database]
hostname = raspberrypi		; Default hostname (default: localhost)
port = 3306				    ; MySQL port number (default is 3306)
username = emuser   		; MySQL username (default is current user)
password = em2015			; MySQL password (defaukt is no password)
database = energymeter 		; MySQL database


########################################################################
# The 'metering' section contains the configuration values that are
# only required for the actual metering of the data.
########################################################################

[metering]
#simulation = True			; Set to "True" to simulate using keypresses
logfile = /var/log/energymeter/metering.log
loglevel = DEBUG           ; Logging level (DEBUG, INFO, WARN, ERROR)


########################################################################
# The 'webserver' section contains the configuration values that are
# only required for the webserver.
########################################################################

[webserver]
hostname = 0.0.0.0  		; Webserver binding (default: 0.0.0.0)
port = 8888				    ; Webserver port (default: 80)
logfile = /var/log/energymeter/webserver.log
loglevel = DEBUG            ; Logging level (DEBUG, INFO, WARN, ERROR)


########################################################################
# Define all meters using 'meter:<id>'. The identifier should be a
# unique numeric value. This identifier is used in the database too,
# so make sure all your meters have a unique identifier.
#
# Meters are connected to GPIO pins. These pins can either use a
# 'pull up' or a 'pull down' to prevent a floating signal. You can
# check your electrical schema to find out if your input uses a pull up
# (resistor connected to 3.3V) or a pull down (resistor connect to
# ground).
#
# Also specify if the trigger should when the signal is RAISING, FALLING
# or on BOTH changes. It generally doesn't matter if you choose RAISING
# or FALLING, because the pulses will be fairly short. It's important
# to set the bounce time (in milliseconds). After a trigger, it doesn't
# listed for this time for any other triggers. This is useful to prevent
# multiple triggers due to jitter. If you set the bounce time too high,
# then you might miss real triggers.
# 
# Each pulse represents a certain usage. You need to specify the 'unit'
# and how much of those units are represented by a single pulse. Most
# electricity meters will pulse every 1Wh and most gas meters will
# pulse each 10 liters of gas.
#
########################################################################

[meter:1]
description = Electricity		; What is being measured
pulse_value = 1			        ; Each pulse is 1Wh
unit = Wh				        ; Presentation unit of the total usage
large_unit = kWh                ; Presentation unit of large values
large_factor = 1000             ; Large factor (1kWh = 1000Wh)
current_unit = W    			; Presentation unit of the current usage
current_factor = 3600			; We need a factor of 3600 to get from Wh -> W
durations = 60,900,3600         ; Store per minute, quarter and hour
cost = .0002170:0700-2300,.0001994  ; €0.0002170 per Wh (07:00 - 23:00, local time, €0.0001994 otherwise)
gpio_pin = 22			        ; GPIO pin
gpio_pull_mode = PULL_UP		; Input using PULL_UP or PULL_DOWN
gpio_trigger_edge = RISING		; Trigger on RISING, FALLING or BOTH
gpio_bounce_time = 25   		; Duration that we don't listen after a trigger

[meter:2]
description = Gas			    ; What is being measured
pulse_value = 10       			; Each pulse is 10 liters (or .01m3)
unit = l		        		; Presentation unit of the total usage
large_unit = m3                 ; Presentation unit of large values
large_factor = 1000             ; Large factor (1m3 = 1000l)
current_unit = l/hr 			; Presentation unit of the current usage
current_factor = 3600			; We need a factor of 3600 to get from l -> l/hr
durations = 60,900,3600         ; Store per minute, quarter and hour
cost = 0.0006137                    ; Gas costs €0.0006137 per liter
gpio_pin = 27			        ; GPIO pin
gpio_pull_mode = PULL_UP		; Input using PULL_UP or PULL_DOWN
gpio_trigger_edge = RISING	    ; Trigger on RISING, FALLING or BOTH
gpio_bounce_time = 100   		; Duration that we don't listen after a trigger
